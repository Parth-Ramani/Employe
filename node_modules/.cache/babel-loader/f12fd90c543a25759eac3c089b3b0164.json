{"ast":null,"code":"var _jsxFileName = \"/home/parth/Desktop/employee-master/src/components/TableData/TableData.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect, useContext } from \"react\";\nimport TableExpand from \"../TableExpand/TableExpand\";\nimport UpdateForm from \"../UpdateForm/UpdateForm\";\nimport TableRow from \"./TableRow\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SearchTerm } from \"../../App\";\nimport Pagination from \"../Pagination/Pagination\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TableData() {\n  _s();\n\n  const state = useSelector(state => state);\n  const dispatch = useDispatch();\n  const [viewID, setviewID] = useState(null);\n  const [employee, setEmployee] = useState(state.gobalSateEmployee); //expand data\n\n  const expandHnadler = (event, obj) => {\n    setviewID(obj.id);\n  }; //update form handleing\n\n\n  const [updateFormState, setUpdateFormState] = useState(null);\n\n  const updateFormHandler = (event, objId) => {\n    setUpdateFormState(objId);\n    setviewID(null);\n  };\n\n  const closeUpdateForm = () => {\n    setUpdateFormState(null);\n  };\n\n  const hideExpand = () => {\n    setviewID(null);\n  }; ///multiple Select\n\n\n  const checkedHandler = (event, data) => {\n    const {\n      checked\n    } = event.target;\n    const checkArray = state.gobalSateEmployee.map(ele => {\n      if (ele.id === data.id) {\n        return { ...ele,\n          select: checked\n        };\n      }\n\n      return ele;\n    });\n    localStorage.setItem(\"employee\", JSON.stringify(checkArray));\n    dispatch({\n      type: \"CHECK\",\n      payload: checkArray\n    });\n  }; //search\n\n\n  const searchTerm = useContext(SearchTerm);\n  useEffect(() => {\n    if (searchTerm !== \"\") {\n      const newData = state.gobalSateEmployee.filter(employe => {\n        return Object.values(employe).join(\"\").toLowerCase().includes(searchTerm.toLowerCase());\n      });\n      setEmployee(newData);\n    } else {\n      setEmployee(state.gobalSateEmployee);\n    }\n  }, [searchTerm, state.gobalSateEmployee]); //pagination\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postPerPage, setPostPerPage] = useState(5); // Get Current posts\n\n  const indexOfLastPosts = currentPage * postPerPage;\n  const indexOfFirstPost = indexOfLastPosts - postPerPage;\n  const currentEmployees = employee.slice(indexOfFirstPost, indexOfLastPosts); //change Page\n\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  const perPage = post => {\n    setPostPerPage(post);\n  };\n\n  useEffect(() => {\n    const deleteShift = currentEmployees.length === 0 ? currentPage - 1 : currentPage; // console.log(deleteShift);\n\n    setCurrentPage(deleteShift <= 0 ? 1 : deleteShift); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.gobalSateEmployee]);\n  const newData = JSON.parse(localStorage.getItem(\"employee\"));\n  const employeeData = newData === null ? [] : newData;\n\n  const getCurrentPage = val => {\n    setCurrentPage(val);\n  }; // Select all\n\n\n  useEffect(() => {\n    const selcted = currentEmployees.map(ele => {\n      return { ...ele,\n        select: state.selectToggle\n      };\n    });\n    const newDataArray = state.gobalSateEmployee.map(obj => selcted.find(o => o.id === obj.id) || obj);\n    localStorage.setItem(\"employee\", JSON.stringify(newDataArray));\n    dispatch({\n      type: \"CHECK\",\n      payload: newDataArray\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.selectToggle]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [currentEmployees.map(obj => /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TableRow, {\n        obj: obj,\n        expandHnadler: expandHnadler,\n        updateFormHandler: updateFormHandler,\n        checkedHandler: checkedHandler,\n        hideExpand: hideExpand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), viewID === obj.id && /*#__PURE__*/_jsxDEV(TableExpand, {\n        obj: obj,\n        hideExpand: hideExpand\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }, this), updateFormState === obj.id && /*#__PURE__*/_jsxDEV(UpdateForm, {\n        obj: obj,\n        closeUpdateForm: closeUpdateForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)]\n    }, obj.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this)), employeeData.length === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Pagination, {\n      postPerPage: postPerPage,\n      totalPosts: employeeData.length,\n      paginate: paginate,\n      perPage: perPage,\n      currentPage: currentPage,\n      getCurrentPage: getCurrentPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TableData, \"Boh3S991PX7BAM6lNbGWAKYkryk=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = TableData;\nexport default TableData;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableData\");","map":{"version":3,"sources":["/home/parth/Desktop/employee-master/src/components/TableData/TableData.js"],"names":["React","Fragment","useState","useEffect","useContext","TableExpand","UpdateForm","TableRow","useDispatch","useSelector","SearchTerm","Pagination","TableData","state","dispatch","viewID","setviewID","employee","setEmployee","gobalSateEmployee","expandHnadler","event","obj","id","updateFormState","setUpdateFormState","updateFormHandler","objId","closeUpdateForm","hideExpand","checkedHandler","data","checked","target","checkArray","map","ele","select","localStorage","setItem","JSON","stringify","type","payload","searchTerm","newData","filter","employe","Object","values","join","toLowerCase","includes","currentPage","setCurrentPage","postPerPage","setPostPerPage","indexOfLastPosts","indexOfFirstPost","currentEmployees","slice","paginate","pageNumber","perPage","post","deleteShift","length","parse","getItem","employeeData","getCurrentPage","val","selcted","selectToggle","newDataArray","find","o"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect, useContext} from \"react\";\nimport TableExpand from \"../TableExpand/TableExpand\";\nimport UpdateForm from \"../UpdateForm/UpdateForm\";\nimport TableRow from \"./TableRow\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SearchTerm,  } from \"../../App\";\nimport Pagination from \"../Pagination/Pagination\";\nfunction TableData() {\n  const state = useSelector((state) => state);\n\n\n  const dispatch = useDispatch();\n  const [viewID, setviewID] = useState(null);\n  const [employee ,setEmployee] = useState(state.gobalSateEmployee)\n  //expand data\n  const expandHnadler = (event, obj) => {\n    setviewID(obj.id);\n  };\n  //update form handleing\n  const [updateFormState, setUpdateFormState] = useState(null);\n  const updateFormHandler = (event, objId) => {\n    setUpdateFormState(objId);\n    setviewID(null);\n  };\n  const closeUpdateForm = () => {\n   \n    setUpdateFormState(null);\n  };\n  const hideExpand = () => {\n    setviewID(null);\n  };\n  \n  \n  \n\n  ///multiple Select\n  const checkedHandler = (event, data) => {\n    const { checked } = event.target;\n    const checkArray = state.gobalSateEmployee.map((ele) => {\n      if (ele.id === data.id) {\n        return { ...ele, select: checked };\n      }\n      return ele;\n    });\n    localStorage.setItem(\"employee\", JSON.stringify(checkArray));\n    dispatch({ type: \"CHECK\", payload: checkArray });\n    \n  };\n  //search\n  const searchTerm =useContext(SearchTerm)\n  useEffect(() => {\n    if ( searchTerm!== \"\") {\n      const newData = state.gobalSateEmployee.filter((employe) => {\n        return Object.values(employe)\n          .join(\"\")\n          .toLowerCase()\n          .includes(searchTerm.toLowerCase());\n      });\n      setEmployee(newData);\n    } else{\n      setEmployee(state.gobalSateEmployee);\n    }\n  }, [searchTerm,state.gobalSateEmployee])\n\n  //pagination\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postPerPage, setPostPerPage] = useState(5);\n\n  // Get Current posts\n  const indexOfLastPosts = currentPage * postPerPage;\n  const indexOfFirstPost = indexOfLastPosts - postPerPage;\n  \n \n    const currentEmployees = employee.slice(\n      indexOfFirstPost,\n      indexOfLastPosts\n    );\n  \n  \n  //change Page\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber)\n  };\n\n  const perPage = (post) => {\n    setPostPerPage(post);\n  };\n  useEffect(() => {\n    const deleteShift =currentEmployees.length === 0 ?currentPage -1 :currentPage\n\n    // console.log(deleteShift);\n    setCurrentPage(deleteShift <= 0 ? 1 : deleteShift);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.gobalSateEmployee])\n  \n  const newData = JSON.parse(localStorage.getItem(\"employee\"));\n  const employeeData = newData === null ? [] : newData;\n\n const getCurrentPage =(val) =>{\n  setCurrentPage(val)\n }\n \n  // Select all\n  useEffect(() => {\n    const selcted = currentEmployees.map((ele) => {\n      return { ...ele, select: state.selectToggle };\n    });\n    const newDataArray = state.gobalSateEmployee.map(\n      (obj) => selcted.find((o) => o.id === obj.id) || obj\n    );\n    localStorage.setItem(\"employee\", JSON.stringify(newDataArray));\n    dispatch({ type: \"CHECK\", payload: newDataArray });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state.selectToggle,])\n\n\n  \n  return (\n    <Fragment>\n      {currentEmployees.map((obj) => (\n        <Fragment key={obj.id}>\n          <TableRow\n            obj={obj}\n            expandHnadler={expandHnadler}\n            updateFormHandler={updateFormHandler}\n            checkedHandler={checkedHandler}\n            hideExpand={hideExpand}\n          />\n          {viewID === obj.id && (\n            <TableExpand obj={obj} hideExpand={hideExpand} />\n          )}\n          {updateFormState === obj.id && (\n            <UpdateForm obj={obj} closeUpdateForm={closeUpdateForm} />\n          )}\n        </Fragment>\n      ))}\n      {employeeData.length === 0 ? (\n        <></>\n      ) : (\n        <Pagination\n          postPerPage={postPerPage}\n          totalPosts={employeeData.length}\n          paginate={paginate}\n          perPage={perPage}\n          currentPage={currentPage}\n          getCurrentPage ={getCurrentPage}\n        />\n      )}\n    </Fragment>\n  );\n}\n\nexport default TableData;\n"]},"metadata":{},"sourceType":"module"}